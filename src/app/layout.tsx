import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { Toaster } from "react-hot-toast";
import { QueryClientCustomProvider } from "@/modules/core/providers/QueryClientCustomProvider";
import { DiProvider } from "@/modules/core/contexts/DiContext";
import { ErrorBoundaryProvider } from "@/modules/core/providers/ErrorBoundaryProvider";
import { composeProviders } from "@/modules/core/utils/compose-providers";
import { Navbar } from "@/modules/core/components/navbar";
import { getService } from "@/modules/core/utils/di-utils";
import { PortfolioService } from "@/modules/portfolio/services/portfolio-service";
import { LocaleService } from "@/modules/core/services/locales-services";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Portfolio",
  description: "Generated by create next app",
  icons: {
    icon: "/favicon.svg",
  },
};

const Provider = composeProviders([
  ErrorBoundaryProvider,
  DiProvider,
  QueryClientCustomProvider,
]);

const portfolioService = getService(PortfolioService);
const localeService = getService(LocaleService);

export function generateStaticParams() {
  return [{ lang: "en" }, { lang: "es" }];
}

type Props = { children: React.ReactNode; params: Promise<{ lang: string }> };

export default async function RootLayout({
  children,
  params,
}: Readonly<Props>) {
  const { lang } = await params;
  localeService.setCurrentLocale(lang);
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Provider>
          <Toaster position="top-right" />
          <Navbar
            items={await portfolioService.getItemMenus()}
            icon={{
              src: "/favicon.svg",
              title: "Portfolio",
            }}
          />
          {children}
        </Provider>
      </body>
    </html>
  );
}
